#!/usr/bin/env rakudo


use lib 'lib';
use plot;
use util;


sub MAIN($dirs, $op, $arg_3 = 'arg_3', $arg_4 = 'arg_4', $arg_5 = 'arg_5') 
{
    my @disks;
    @disks = parse_comma($dirs);

    if ($op ~~ 'clean') {
        clean(@disks);
    } 
    if ($op ~~ 'count') {
        my $cnt = 0;
        if (@*ARGS.elems == 2) {
	   my $plot = count(@disks, 'plot');
	   say @disks.elems  ~ " disks, total : $plot plots\n";
	   my $spt = count(@disks, 'spt');
	   say @disks.elems  ~ " disks, total : $spt spt\n";
	   my $fpt = count(@disks, 'fpt');
	   say @disks.elems  ~ " disks, total : $fpt fpt\n";
	}
	if (@*ARGS.elems == 3) {
	   my $ft = $arg_3;
	   if ($arg_3 ~~ 'plot') {
	      $cnt = count(@disks, 'plot');
	   }
	   if ($arg_3 ~~ 'spt') {
	      $cnt = count(@disks, 'spt');      
	   }
	   if ($arg_3 ~~ 'fpt') {
	      $cnt = count(@disks, 'fpt')
	   }
	   say @disks.elems  ~ " disks, total $arg_3: $cnt ";
	}
    } 
    if ($op ~~ 'rmsys') {
        rmsys(@disks);
    }
    if ($op ~~ 'rm') {
        my $n;
        if  (@*ARGS.elems != 3) {
	    $n = 2;
        } else {
            $n = $arg_3;
        }
        say "args: " ~ @*ARGS.elems;
        say "n:  " ~ $n;
	
        rm(@disks,$n);
    }
    if ($op ~~ 'test') {
	if (@*ARGS.elems == 3) {
	   test(@disks, $arg_3)
	} elsif (@*ARGS.elems == 4) {
	   test(@disks, $arg_3, $arg_4);
	} else {
	   test(@disks);
	}
    }
    
    my $fs = 'xfs';
    if ($op ~~ 'stop') {
       for @disks -> $d {
       	   qqx/tmux kill-session -t $d /;
       }
    }
    if ($op ~~ 'add') {
       if ($arg_3 ~~ 'mmx') {
       	 for @disks -> $d {
   	     my $t = '/sd' ~ $d ~ '/' ~ 'plots';
       	     put "plots dir: $t";
	     if (@*ARGS.elems >= 4) {
	        my $t = '/' ~ $arg_4 ~ '/sd' ~ $d ~ '/' ~ 'plots';
		say $t;
	     	qqx/chia.bin plots add -d $t/
	     } else {
	     	qqx/chia.bin plots add -d $t/
	     }
       	 }
       } else {
       	 for @disks -> $d {
   	     my $t = '/sd' ~ $d ~ '/' ~ 'plots';
       	     put "plots dir: $t";
	     qqx/chia plots add -d $t/
       	 }
       }
    }
    if ($op ~~ 'mount') {
       if ( @*ARGS.elems >= 3) {
       	  for @disks -> $d {
              say $d;
	      $fs = $arg_3;
	      if ($fs ~~ 'nfs') {
	      	 my $hostip   = $arg_4;
	      	 my $hostname = $arg_5;
	      	 say "$hostip. $hostname, $d";
	      	 mount_nfs($d, $fs, $hostip, $hostname);
	      } else {
 	      	 mount($d, $fs);
	      }
	   }
       } else {
       	  for @disks -> $d {
	      mount($d, $fs);
	  }
       }	   
    }
    if ($op ~~ 'umount') {
       for @disks -> $d {
	   umount($d);
       }
    }
    if ($op ~~ 'format') {
       for @disks -> $d {
           if (@*ARGS.elems == 3) {
	      $fs = $arg_3;
	   }
           format($d, $fs);
       }
    }
    if ($op ~~ 'nfse') {
       my $nfs_conf = "/etc/exports";
       for @disks -> $d {
           my $ed = "/sd" ~ $d ~ " *(rw,sync,no_root_squash)\n";
           my $nfs_op = $arg_3;
	   spurt $nfs_conf, $ed, :append;
       }
       qqx/service  nfs-server restart/;
    }
}
